function color {

## '\[\033[${AT};${FG};${BG}m\]'

###
# color definitions
###

# Foreground colors
FG_BLACK="30"   ## +Bold = Dark Gray
FG_RED="31" ## +Bold = Light Red
FG_GREEN="32"   ## +Bold = Light Green
FG_YELLOW="33"  ## +Bold = Bright Yellow
FG_BLUE="34"    ## +Bold = Light Blue
FG_PURPLE="35"  ## +Bold = Light Purple/Pink
FG_CYAN="36"    ## +Bold = Light Cyan
FG_GRAY="37"    ## +Bold = White

#background colors
BG_BLACK="40"
BG_RED="41"
BG_GREEN="42"
BG_BROWN="43"
BG_BLUE="44"
BG_PURPLE="45"
BG_CYAN="46"
BG_GRAY="47"

# text Attributes
AT_NORMAL="0"
AT_BOLD="1"
AT_ITALICS="3"
AT_UNDERLINE="4"
AT_BLINK="5"
AT_OUTLINE="6"
AT_REVERSE="7"
AT_NODISPLAY="8"    ## Either black on black, or current bg is applied to fg also
AT_STRIKE="9"
AT_NOBOLD="22"
AT_NOITALICS="23"
AT_NOUNDERLINE="24"
AT_NOBLINK="25"
AT_NOREVERSE="27"
AT_NOSTRIKE="29"

###
# GTD part
###
case $SHELL in
	*/bash) ;;
	*)	typeset -u IN_AT IN_FG IN_BG ;;
esac

if [[ -z $1 ]]; then
	# no request, reset to defaults
	STRING="${AT_NORMAL}m"
else
	# color definition found
	print $1 | sed 's/,/ /g' | read IN_AT IN_FG IN_BG
if [[ $SHELL == "/bin/bash" ]]; then
	IN_AT="$(echo "${IN_AT}"|tr [:lower:] [:upper:])"
	IN_FG="$(echo "${IN_FG}"|tr [:lower:] [:upper:])"
	IN_BG="$(echo "${IN_BG}"|tr [:lower:] [:upper:])"
fi
	eval "AT=\$AT_$IN_AT"
	[[ -z ${IN_FG} ]] && AT=$AT_NORMAL || eval "FG=\$FG_$IN_FG"
	[[ -z ${IN_BG} ]] && AT=$AT_NORMAL || eval "BG=\$BG_$IN_BG"
#	STRING="${AT};${FG};${BG}m"
case $SHELL in
	*/ksh)	STRING="${AT};${FG};${BG}m" ;;
	*/bash)	STRING="${AT};${FG}m" ;;
esac	
fi

case $SHELL in
	*/ksh)	print "\033[${STRING}" ;;
	*/bash)	echo -e "\[\033[${STRING}\]" ;;
esac	

}
